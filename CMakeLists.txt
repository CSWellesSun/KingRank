CMAKE_MINIMUM_REQUIRED(VERSION 3.10)
if(POLICY CMP0042)
    cmake_policy(SET CMP0042 NEW)
endif()

MESSAGE(STATUS "Cmake output binray directory: ${CMAKE_BINARY_DIR}")

# Project Info
SET(CMAKE_CXX_STANDARD 17)
PROJECT(KingRank
        VERSION 2022.5
        DESCRIPTION "ZheJiang University 2021~2022 Spring-Summer OOP Project"
        LANGUAGES C CXX)

# CTest
enable_testing()

# Options
ADD_DEFINITIONS(-DENABLE_DEBUG)
# ADD_DEFINITIONS(-DENABLE_EXECUTE_DEBUG)
# ADD_DEFINITIONS(-DENABLE_PARSER_DEBUG)
# ADD_DEFINITIONS(-DENABLE_BPM_DEBUG)
# ADD_DEFINITIONS(-DSHOW_PAGE_SPLIT)

# Set Include Directory
SET(THIRD_PARTY_DIR ${PROJECT_SOURCE_DIR}/thirdparty)
SET(KingRank_SRC_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/include)
INCLUDE_DIRECTORIES(${KingRank_SRC_INCLUDE_DIR} ${THIRD_PARTY_DIR})

# Compiler flags.
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC -Wextra -march=native")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-unused-parameter -Wno-attributes")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -O0 -ggdb")
# set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -O0 -ggdb -fsanitize=address -fno-omit-frame-pointer -fno-optimize-sibling-calls")
# set(CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} -fPIC")
# set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -fPIC")
# set(CMAKE_STATIC_LINKER_FLAGS "${CMAKE_STATIC_LINKER_FLAGS} -fPIC")

# set(GCC_COVERAGE_LINK_FLAGS    "-fPIC")
# message(STATUS "CMAKE_CXX_FLAGS: ${CMAKE_CXX_FLAGS}")
# message(STATUS "CMAKE_CXX_FLAGS_DEBUG: ${CMAKE_CXX_FLAGS_DEBUG}")
# message(STATUS "CMAKE_EXE_LINKER_FLAGS: ${CMAKE_EXE_LINKER_FLAGS}")
# message(STATUS "CMAKE_SHARED_LINKER_FLAGS: ${CMAKE_SHARED_LINKER_FLAGS}")

# Add Subdirectory
ADD_SUBDIRECTORY(src ${CMAKE_BINARY_DIR}/bin)
